---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <main>
    <section id="home" class="flex justify-center mx-auto max-w-7xl w-11/12">
      <div class="flex flex-col">
        <h1 class="lg:text-8xl text-5xl">
          Designing emotional<br />digital experiences <br />that people love
        </h1>

        <div class="flex flex-row justify-between mt-20 pt-28">
          <div
            class="justify-center items-center relative rotating-effect hidden lg:flex"
          >
            <img
              id="profilepic"
              class="rounded-full h-20 w-20 m-[18px] object-cover"
              src="./profilepic.jpg"
              alt="Profile Pic"
            />

            <svg class="h-26 w-26 absolute top-0 left-0 overflow-visible">
              <defs>
                <path
                  id="circlePath"
                  d="M58,0 A58,58 0 1,0 116,58 A58,58 0 1,0 58,116 A58,58 0 1,0 0,58 A58,58 0 1,0 58,0 Z"
                ></path>
              </defs>
              <text font-size="17" fill="#F4E7D4" dominant-baseline="Hanging">
                <textPath xlink:href="#circlePath">
                  ✦ BRAULIO ROSARIO ✦ WEB DEVELOPER
                </textPath>
              </text>
            </svg>
          </div>

          <div class="flex justify-center items-center mx-auto">
            <h2 class="text-lg lg:text-start text-center">
              I'm a web developer with 2 years of experience, based in <br />
              the Dominican Republic. I like to understand people to <br />solve
              their problems and create websites that resonate.
            </h2>
          </div>
        </div>
      </div>
    </section>
    <section id="skills" class="h-[90vh] mx-auto flex items-center relative">
      <div class="flex flex-col justify-center">
        <h1
          id="element1"
          class="text-5xl text-center lg:text-start flex lg:relative lg:left-[-1000px] lg:transition-left lg:duration-1000 lg:ease-in-out"
        >
          ASTRO ✦ HTML ✦ CSS ✦ TAILWIND ✦ JAVASCRIPT
        </h1>
        <h1
          id="element2"
          class="text-5xl text-center lg:text-start flex lg:relative lg:left-[-1000px] lg:transition-left lg:duration-1000 lg:ease-in-out"
        >
          ✦ REACT ✦ NODE.JS ✦ NEXT ✦ TYPESCRIPT
        </h1>
      </div>
    </section>
    <section id="work" class="h-screen max-w-7xl mx-auto w-11/12">
      <div class="flex-col flex gap-8 w-full justify-center items-center">
        <div class="flex justify-start text-start pb-20">
          <h1 class="text-7xl">Featured work</h1>
        </div>
        <div
          class="flex flex-col workcontainer rounded-lg animate-fade-left animate-duration-1000 lg:w-3/4 w-11/12"
        >
          <div
            id="imageContainer"
            class="flex justify-center h-[25vh] items-center overflow-hidden"
          >
            <img
              id="image"
              src="./aaaa.webp"
              alt="Lights and Media"
              class="object-cover hover:scale-105"
            />
          </div>
          <div id="detailsContainer" class="hidden h-[25vh] w-full">
            <div
              class="mx-auto flex flex-col gap-12 justify-center items-center"
            >
              <h1
                class="font-bold text-black italic text-sm lg:text-xl detailscontainer"
              >
                Lights and Media: Social Media Agency
              </h1>
              <h1
                class="font-bold text-black italic text-xs lg:text-lg text-center detailscontainer"
              >
                Built with Next, Node.js, Typescript, CSS, <br /> HTML, Tailwind
                CSS, Instagram API.
              </h1>
              <div class="flex flex-row justify-between gap-20">
                <button
                  id="backButton"
                  class="text-sm text-black font-bold italic hover:scale-105 detailscontainer"
                >
                  Back
                </button>
                <button class="hover:scale-105">
                  <a
                    href="https://www.lightsandmedia.agency/"
                    target="_blank"
                    class="text-sm font-bold text-black italic detailscontainer"
                    >Go</a
                  >
                </button>
              </div>
            </div>
          </div>
        </div>
        <div
          class="flex flex-col workcontainer rounded-lg animate-fade-left animate-duration-1000 lg:w-3/4 w-11/12"
        >
          <div
            id="imageContainer2"
            class="flex justify-center items-center h-[25vh] overflow-hidden"
          >
            <img
              id="image"
              src="./boxinglogo.webp"
              alt="Boxing Event III"
              class="object-scale-down hover:scale-105"
            />
          </div>
          <div
            id="detailsContainer2"
            class="hidden h-[25vh] justify-center items-center"
          >
            <div
              class="mx-auto flex flex-col gap-12 justify-center items-center"
            >
              <h1
                class="font-bold text-black italic text-sm lg:text-xl detailscontainer"
              >
                Boxing Event III
              </h1>
              <h1
                class="font-bold text-black italic text-xs lg:text-xl detailscontainer"
              >
                Built with: Astro, JavaScript, Tailwind CSS, HTML, CSS
              </h1>
              <div class="flex flex-row justify-between gap-20">
                <button
                  id="backButton2"
                  class="text-sm text-black font-bold italic hover:scale-105 detailscontainer"
                >
                  Back
                </button>
                <button class="hover:scale-105">
                  <a
                    href="https://boxingevent.netlify.app/"
                    target="_blank"
                    class="text-sm text-black font-bold italic detailscontainer"
                    >Go</a
                  >
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  .rotating-effect {
    animation-name: rotate;
    animation-duration: 10s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    transform-origin: center;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  .text-gold {
    color: rgb(244, 231, 200);
  }

  body.light-mode .workcontainer {
    --tw-bg-opacity: 0.3;
    background-color: rgb(82 82 82 / var(--tw-bg-opacity));
  }

  body.light-mode .workcontainer .detailscontainer {
    color: white;
  }

  body.dark-mode .workcontainer {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  }
</style>

<script>
  const element1 = document.getElementById("element1");
  const element2 = document.getElementById("element2");

  // Función para manejar el evento de scroll
  function handleScroll() {
    // Calcula la distancia entre la parte superior de cada elemento y la parte superior de la ventana
    const element1Top = element1.getBoundingClientRect().top;

    // Si los elementos están visibles en la pantalla
    if (element1Top < window.innerHeight) {
      // Calcula la distancia que el usuario ha hecho scroll
      const scrollDistance = window.scrollY;

      element1.style.left = `${scrollDistance}px`;

      element2.style.left = `${scrollDistance}px`;

      // Verifica si la siguiente sección ha comenzado
      const section3 = document.getElementById("work");
      const section3Top = section3.getBoundingClientRect().top;
      if (section3Top < window.innerHeight) {
        // Si la parte superior de la siguiente sección es visible en la ventana, elimina el event listener
        window.removeEventListener("scroll", handleScroll);
      }
    }
  }

  // Escucha el evento de scroll
  window.addEventListener("scroll", handleScroll);

  // Escucham el evento de scroll para volver a activar la función handleScroll cuando el usuario vuelve a la sección skills
  window.addEventListener("scroll", function () {
    const section2 = document.getElementById("skills");
    const section2Top = section2.getBoundingClientRect().top;
    const section3 = document.getElementById("work");
    const section3Top = section3.getBoundingClientRect().top;

    // Verifica si la parte superior de la sección skills es visible en la ventana y si la siguiente sección  ya no está visible
    if (section2Top < window.innerHeight && section3Top > window.innerHeight) {
      // Si se cumple la condición, vuelve a añadir el event listener
      window.addEventListener("scroll", handleScroll);
    }

    const imageContainer = document.getElementById("imageContainer");
    const detailsContainer = document.getElementById("detailsContainer");
    const backButton = document.getElementById("backButton");

    const imageContainer2 = document.getElementById("imageContainer2");
    const detailsContainer2 = document.getElementById("detailsContainer2");
    const backButton2 = document.getElementById("backButton2");

    imageContainer.addEventListener("click", () => {
      imageContainer.style.display = "none";
      detailsContainer.style.display = "flex";
    });

    backButton.addEventListener("click", () => {
      imageContainer.style.display = "flex";
      detailsContainer.style.display = "none";
    });

    imageContainer2.addEventListener("click", () => {
      imageContainer2.style.display = "none";
      detailsContainer2.style.display = "flex";
    });

    backButton2.addEventListener("click", () => {
      imageContainer2.style.display = "flex";
      detailsContainer2.style.display = "none";
    });
  });
</script>
